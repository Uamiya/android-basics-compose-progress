/**
 * Unit 1:
 */

fun main() {
    unit1()
    println(birthdayGreeting("Traveler"))
    println(music(12))
    functionexample()
    f()
}
fun unit1() {
    //val two: Int = 2
    //val word: String = "Kotlin"
    val two = 2
    val word = "Kotlin"
    println("You can code in $two different ways with $word")
    val savedmusiccount = 905
    val numberofplaylist = 15
    val eachplaylistcount = 7
    println("You have \"${savedmusiccount + (numberofplaylist * eachplaylistcount)}\" total count of music.")
}
fun birthdayGreeting(name: String): String {
    val nameGreeting = "Happy Birthday, $name!"
    val ageGreeting = "You are now 5 years old!"
    return "$nameGreeting\n$ageGreeting"
}
fun music(playlist: Int): Int {
    val savedmusic = 905
    val totalmusic = savedmusic*playlist
    return totalmusic
}


fun add(num1: Int, num2: Int): Int {
    return num1 + num2
}
fun functionexample() {
    val firstNumber = 10
    val secondNumber = 5
    val thirdNumber = 8

    val result = add(firstNumber, secondNumber)
    val anotherResult = add(firstNumber, thirdNumber)

    println("$firstNumber + $secondNumber = $result")
    println("$firstNumber + $thirdNumber = $anotherResult")
}



fun displayAlertMessage(system: String = "Unknown OS", emailId: String): String {
    return "There's a new sign-in request on $system for your Google Account $emailId"
}
fun f() {
    val firstUserEmailId = "user_one@gmail.com"

    // The following line of code assumes that you named your parameter as emailId. 
    // If you named it differently, feel free to update the name.
    println(displayAlertMessage(emailId = firstUserEmailId))
    println()

    val secondUserOperatingSystem = "Windows"
    val secondUserEmailId = "user_two@gmail.com"

    println(displayAlertMessage(secondUserOperatingSystem, secondUserEmailId))
    println()

    val thirdUserOperatingSystem = "Mac OS"
    val thirdUserEmailId = "user_three@gmail.com"

    println(displayAlertMessage(thirdUserOperatingSystem, thirdUserEmailId))
    println()
}
/**
 * fun name (parameters): return type {
 * body
 * return statement
 * }
 */
